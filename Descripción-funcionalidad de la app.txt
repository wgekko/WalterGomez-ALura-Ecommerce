Descripción del Desafio Alura Geek - E commerce

Historia

La empresa AluraGeek necesita llegar a más clientes y aumentar su nivel de ventas, por lo que quieren implementar un e-commerce, llevar a la empresa al siguiente nivel y volverse más digital.

Para ello están pidiendo nuestra ayuda como desarrolladores, el e-commerce debe contener los siguientes requisitos:
- Una página de inicio que contiene un botón de inicio de sesión y un motor de búsqueda de productos ofrecidos por la empresa.
- Un banner que contenga descuentos, promociones o informaciónes relevante del momento.
- Una galería con información del producto, como imagen, nombre del producto, precio y un enlace a la página de descripción del producto.
- Una página de producto que contiene la imagen, el nombre, la descripción y el precio.
- Un pie de página con un formulario de contacto y otras informaciónes relevantes.
- Un formulário de iniciar sesión para autenticar a los usuarios que quieran acceder al menu administrador.
- Menú de administrador para que puedan agregar, editar, buscar o eliminar productos de la tienda.

Es muy importante que el sitio sea adaptable para que los clientes puedan comprar fácilmente a través de dispositivos móviles.

> Importante: Todas las imágenes estarán disponibles en Figma para su descarga.
Disponemos de un plazo de seis semanas para desarrollar el proyecto y trabajaremos con el sistema de desarrollo ágil, utilizando el Trello de la siguiente manera:

La columna Listos para iniciar presenta las tarjetas con elementos que aun no fueron desarrollados.
En la columna En Desarrollo estarán los elementos que estés desarrollando en el momento. Al iniciar una tarea, podrás mover la tarjeta que contiene dicha tarea para esta columna.
En la columna Pausado estarán los elementos que comenzaste a desarrollar, pero necesitaste parar por algún motivo.
Por fin, en la columna Concluido estarán los elementos ya concluidos.
El Trello es una herramienta de uso individual para que puedas controlar el progreso de tus actividades, pero no será evaluada.

Para el despliegue y funcionamiento correcto de esta app 
debe considerar tener en cuenta :
vamos a usar el json-server para simular un servidor y consumir los datos.

Json-server está listado como dependiente del package.json,
que es el archivo donde encontramos todas las bibliotecas externas
que estamos usando en nuestro proyecto. Al hacer npm install 
dentro de la carpeta admin (cmd o power shell), que es la carpeta del proyecto 
empieza la descarga de json-server automáticamente.

El comando json-server --watch db.json que usamos para que funcione 
la app, ecesita ser ejecutado dentro de la carpeta del proyecto de admin,
caso contrario este comando no será reconocido.

Otra información importante es que para funcionar localmente,
en lugar de ejecutar el comando json-server --watch db.json,
como lo hacemos en clase, tenemos que ejecutar este comando con npx adelante:

npx json-server --watch db.json

En el caso de que quieras utilizar el comando sin el npx adelante 
es necesario instalar json-server de manera global:

npm install -g json-server COPIA EL CÓDIGO
Después, para subir el servidor, ejecutamos json-server --watch db.json. 
